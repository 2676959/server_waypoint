plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.10-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Xaero's Minimap
	modImplementation "maven.modrinth:xaeros-minimap:${project.xaeros_minimap_fabric_version}"

}

// detect github action environment variables
// https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
String fullProjectVersion

base.archivesName = project.archives_base_name
fullProjectVersion = project.mod_version + '-mc' + project.game_versions

version = fullProjectVersion

processResources {
	inputs.property "id", project.mod_id
	inputs.property "name", project.mod_name
	inputs.property "version", project.mod_version
	inputs.property "minecraft_dependency", project.minecraft_dependency

	filesMatching("fabric.mod.json") {
		def valueMap = [
				"id": project.mod_id,
				"name": project.mod_name,
				"version": project.mod_version,
				"minecraft_dependency": project.minecraft_dependency,
		]
		expand valueMap
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
	options.encoding = "UTF-8"
	options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archives_base_name}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
			artifactId = base.archivesName.get()
			version = fullProjectVersion
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}